//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Студенты
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Студенты()
        {
            this.Ведомости_успеваемости = new HashSet<Ведомости_успеваемости>();
        }

        public int Код_студента { get; set; }
        public string Фамилия { get; set; }
        public string Имя { get; set; }
        public string Отчество { get; set; }
        public Nullable<int> Код__кафедры { get; set; }
        public System.DateTime Год_рождения { get; set; }
        public string Пол { get; set; }
        public string Адрес { get; set; }
        public string Город { get; set; }
        public string Телефон { get; set; }
        public string Фото { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Ведомости_успеваемости> Ведомости_успеваемости { get; set; }
        public virtual Кафедры Кафедры { get; set; }

        public double SredBal
        {
            get
            {
                double summa = 0.0;
                int count = 0;

                var vedom = student_performanceEntities.GetContext().Ведомости_успеваемости.Where(p => p.Код_студента == Код_студента).ToList();

                foreach (var v in vedom)
                {
                    summa += v.Оценка;
                    count++;
                }

                double sred = summa / count;

                return sred;


            }
        }
        public string adress
        {
            get
            {
                return "г. " + Город + " " + Адрес;
            }
        }
        public string bith
        {
            get
            {
                //return Год_рождения.Day + ":" + Год_рождения.Month + ":" + Год_рождения.Year;
                return Год_рождения.ToString("dd.MM.yyyy");
            }
        }
        public string KafName
            {
            get
            {
                return Кафедры.Название_кафедры.ToString();
            }
            }
        public double Sred
        {
            get
            {
                double summa = 0.0;
                int count = 0;
                var current = student_performanceEntities.GetContext().Ведомости_успеваемости.Where(p => p.Код_студента == this.Код_студента).ToList();
                foreach(Ведомости_успеваемости v in current)
                {
                    summa += v.Оценка;
                    count++;
                }
                return Convert.ToDouble(summa/count);
            }
        }

    }
}
